const word = "pedo"
const value = "pepo"
let result = []

const splitWord = word.split("")
const splitValue = value.split("")
console.log('splitWord: ', splitWord)
console.log('splitValue: ', splitValue)

let i = -1

let newObjWord = {}
splitWord.forEach(letter => {
  i++
  if (!Object.keys(newObjWord).includes(letter)) {
    newObjWord[letter] = [i]
  }
  else {
    newObjWord[letter].push(i)
  }
})
console.log("newObjWord", newObjWord)

i = -1
let newObjValue = {}
splitValue.forEach(letter => {
  i++
  if (!Object.keys(newObjValue).includes(letter)) {
    newObjValue[letter] = [i]
  }
  else {
    newObjValue[letter].push(i)
  }
})
console.log("newObjValue", newObjValue)
  
//splitWord = [p, e, d, o]
const wordObj = {
  p: [0],
  e: [1],
  d: [2],
  o: [3]
}
console.log('wordObj: ', wordObj)
const wordLetters = Object.keys(wordObj)
console.log('wordLetters: ', wordLetters)
const wordPositions = Object.values(wordObj)
console.log('wordPositions: ', wordPositions)

// splitValue = [p, e, p, o]
const valueObj = {
  p: [0,2],
  e: [1],
  o: [3]
}

console.log('valueObj: ', valueObj)
const valueLetters = Object.keys(valueObj)
console.log('valueLetters: ', valueLetters)
const valuePositions = Object.values(valueObj)
console.log('valuePositions: ', valuePositions)

const limit = Object.keys(valueObj).length
console.log('limit: ', limit)

for (let i = 0; i < splitWord.length; i++) {
  result[i]=-1
}

for (let i = 0; i < limit; i++) {
  if (wordLetters.includes(valueLetters[i])) {
    valuePositions[i].forEach(index => {
      if (wordObj[valueLetters[i]].some((value) => value == index)) {
        // console.log("i", i, 'indiceLetraWord', wordObj[valueLetters[i]], 'indiceLetraValue', index, wordObj[valueLetters[i]].some((value) => value == index))
        result[index]=1
      } else {
        if (!valuePositions[i].length > wordPositions[i].length) {
          result[index]=0
        }
      }
    })
  }
}

console.log(result)

